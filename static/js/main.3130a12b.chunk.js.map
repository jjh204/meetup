{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberEvents.js","mock-data.js","api.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","details","handleDetails","setState","this","props","event","summary","location","htmlLink","description","start","startDate","Moment","dateTime","format","className","onClick","href","target","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","handleInputChanged","value","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","number","updateEvents","type","onChange","onFocus","style","display","NumberEvents","currentLocation","mockData","kind","etag","status","created","updated","creator","email","self","organizer","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","extractLocations","Set","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","data","getToken","fetch","then","res","json","catch","result","getEvents","NProgress","startsWith","done","token","removeQuery","url","setItem","JSON","stringify","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","App","eventCount","eventResults","slice","mounted","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.3130a12b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Moment from 'moment';\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    details: false,\r\n  }\r\n\r\n  handleDetails = () => {\r\n    if (this.state.details === false) {\r\n      this.setState({ details: true });\r\n    }\r\n    else {\r\n      this.setState({ details: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const details = this.state.details;\r\n    const { summary, location, htmlLink, description, start } = this.props.event;\r\n    const startDate = Moment(start.dateTime).format('DD-MMMM-YYYY, h:mm a');\r\n\r\n    return <div className=\"event\">\r\n      <div className=\"eventOverview\">\r\n        <h1 className=\"summary\">{summary}</h1>\r\n        <p className=\"startDate\">{startDate} (Central European Time)</p>\r\n        <p className=\"location\">Location: {location}</p>\r\n        {!details && <button className=\"showDetails-btn\" onClick={() => this.handleDetails()}>Show Details</button>}\r\n        {details && <button className=\"hideDetails-btn\" onClick={() => this.handleDetails()}>Hide Details</button>}\r\n      </div>\r\n      {details &&\r\n        <div className=\"eventDetails\">\r\n          <h2 className=\"about\">Event Details:</h2>\r\n          <p className=\"link\"><a href={htmlLink} target=\"blank\">See Google Calendar Invite</a></p>\r\n          <p className=\"description\">{description}</p>\r\n        </div>\r\n      }\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map(event =>\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n\r\n  state = {\r\n    query: 'all',\r\n    suggestions: [],\r\n    showSuggestions: false,\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    this.setState({\r\n      query: value,\r\n      suggestions,\r\n    });\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false,\r\n    });\r\n    const number = this.props.number;\r\n    this.props.updateEvents(suggestion, number);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <label>Choose your City: </label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n        />\r\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}\r\n            >{suggestion}</li>\r\n          ))}\r\n          <li onClick={() => this.handleItemClicked(\"all\")}>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\n\r\nclass NumberEvents extends Component {\r\n\r\n  state = {\r\n    number: 32,\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({\r\n      number: value,\r\n    });\r\n    const location = this.props.currentLocation;\r\n    this.props.updateEvents(location, value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"numberEvents\">\r\n        <label>Number of Events: </label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"numberInput\"\r\n          value={this.state.number}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberEvents;","const mockData = [\r\n  {\r\n    kind: 'calendar#event',\r\n    etag: '\"3181161784712000\"',\r\n    id: '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\r\n    status: 'confirmed',\r\n    htmlLink: 'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n    created: '2020-05-19T19:17:46.000Z',\r\n    updated: '2020-05-27T12:01:32.356Z',\r\n    summary: 'Learn JavaScript',\r\n    description: 'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\r\n    location: 'London, UK',\r\n    creator: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true\r\n    },\r\n    organizer: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true\r\n    },\r\n    start: {\r\n      dateTime: '2020-05-19T16:00:00+02:00',\r\n      timeZone: 'Europe/Berlin'\r\n    },\r\n    end: {\r\n      dateTime: '2020-05-19T17:00:00+02:00',\r\n      timeZone: 'Europe/Berlin'\r\n    },\r\n    recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\r\n    originalStartTime: {\r\n      dateTime: '2020-05-19T16:00:00+02:00',\r\n      timeZone: 'Europe/Berlin'\r\n    },\r\n    iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true\r\n    }\r\n  },\r\n  {\r\n    kind: 'calendar#event',\r\n    etag: '\"3181159875584000\"',\r\n    id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\r\n    status: 'confirmed',\r\n    htmlLink: 'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n    created: '2020-05-19T19:14:30.000Z',\r\n    updated: '2020-05-27T11:45:37.792Z',\r\n    summary: 'React is Fun',\r\n    description: 'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\r\n    location: 'Berlin, Germany',\r\n    creator: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true\r\n    },\r\n    organizer: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true\r\n    },\r\n    start: {\r\n      dateTime: '2020-05-20T14:00:00+02:00',\r\n      timeZone: 'Europe/Berlin'\r\n    },\r\n    end: {\r\n      dateTime: '2020-05-20T15:00:00+02:00',\r\n      timeZone: 'Europe/Berlin'\r\n    },\r\n    recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\r\n    originalStartTime: {\r\n      dateTime: '2020-05-20T14:00:00+02:00',\r\n      timeZone: 'Europe/Berlin'\r\n    },\r\n    iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true\r\n    }\r\n  }\r\n];\r\n\r\nexport { mockData };","/**\r\n *\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\n\r\nimport { mockData } from \"./mock-data\";\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        \"https://jgxpnvojk6.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = `https://jgxpnvojk6.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/${token}`;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    `https://jgxpnvojk6.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberEvents from './NumberEvents';\r\nimport { extractLocations, getEvents } from './api';\r\nimport './nprogress.css';\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n    getEvents().then((events) => {\r\n      if (this.mounted) {\r\n        this.setState({ events, locations: extractLocations(events) });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    number: 32,\r\n    currentLocation: 'all'\r\n  }\r\n\r\n  updateEvents = (location, eventCount) => {\r\n    getEvents().then((events) => {\r\n      const eventResults = (location === 'all') ?\r\n        events.slice(0, eventCount) :\r\n        events.filter((event) => event.location === location).slice(0, eventCount);\r\n\r\n      this.setState({\r\n        events: eventResults,\r\n        currentLocation: location,\r\n        number: eventCount\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { locations, number, events, currentLocation } = this.state\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Meetup!</h1>\r\n        <CitySearch locations={locations} number={number} updateEvents={this.updateEvents} />\r\n        <NumberEvents currentLocation={currentLocation} number={number} updateEvents={this.updateEvents} />\r\n        <EventList events={events} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}